/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

/**
 *
 * @author rajam
 */
public class AdminPanel extends javax.swing.JFrame {

    /**
     * Creates new form AdminPanel
     */
    public AdminPanel() {
        initComponents();
        items();
    }
    private void items()
    {
         try {
            Scanner scan = new Scanner(new File("database/Properties.txt")); 
            while(scan.hasNextLine() ) {
                   String[] line = scan.nextLine().split(",");
                   
                   String a = line[0].trim();
                   properties.addItem(a);

                }
            } catch(IOException e) {
           System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        properties = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        kitchen = new javax.swing.JCheckBox();
        internet = new javax.swing.JCheckBox();
        laundry = new javax.swing.JCheckBox();
        parking = new javax.swing.JCheckBox();
        delete = new javax.swing.JButton();
        save = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        nam = new javax.swing.JTextField();
        adddr = new javax.swing.JTextField();
        select = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        rent = new javax.swing.JTextField();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("ADMINISTRATOR");

        properties.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel3.setText("Properties:");

        jLabel4.setText("Property name:");

        jLabel5.setText("Address:");

        jLabel6.setText("Facilities:");

        kitchen.setText("Kitchen");
        kitchen.setEnabled(false);
        kitchen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kitchenActionPerformed(evt);
            }
        });

        internet.setText("Internet");
        internet.setEnabled(false);

        laundry.setText("Laundry");
        laundry.setEnabled(false);

        parking.setText("Parking");
        parking.setEnabled(false);

        delete.setText("Delete Property");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        logout.setText("Log Out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        select.setText("Select");
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });

        jLabel7.setText("Rent:  $");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(properties, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(select))
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(379, 379, 379)
                                .addComponent(rent, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(adddr, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                                    .addComponent(nam)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kitchen)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(internet)
                                .addComponent(laundry)
                                .addComponent(parking, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(362, 362, 362)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(delete))
                        .addGap(90, 90, 90)
                        .addComponent(save)))
                .addContainerGap(123, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(393, 393, 393)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout)
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(logout)))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(properties, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(select))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(adddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(rent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(kitchen)
                .addGap(18, 18, 18)
                .addComponent(internet)
                .addGap(18, 18, 18)
                .addComponent(laundry)
                .addGap(18, 18, 18)
                .addComponent(parking)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete)
                    .addComponent(save))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void kitchenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kitchenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kitchenActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        User.UserF u = new User.UserF();
        u.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed
        // TODO add your handling code here:
        Show();
    }//GEN-LAST:event_selectActionPerformed
     private void editData(String name, String address, String rent, boolean kitchen, boolean parking, boolean internet, boolean laundry)
    {
  
        File fileToBeModified = new File("database/Properties.txt");
         
        String oldContent = "";
         
        BufferedReader reader = null;
         
        FileWriter writer = null;
         String nm = "", addr = "",rnt = "",city = "", province = "",country = "", nam = "";
         String a1 = "",b1 = "",c1 = "",d1 = "",rms = "",rsrms = "";
         String a = "", b = "", c = "", d = "";
         if(kitchen)
         {
             a1 = "Kitchen";
         }
         if(parking)
         {
             b1 = "Parking";
         }if(internet)
         {
             c1 = "Internet";
         }if(laundry)
         {
             d1 = "Laundry";
         }
         
         
         
        try
        {
        String data = properties.getSelectedItem().toString();
     Scanner scan = new Scanner(new File("database/Properties.txt"));
               while(scan.hasNextLine()) {
                   
                   String[] line = scan.nextLine().split(",");
                   
                   if(line[0].equals(data)){
                   nm = line[0].trim();
                   addr = line[1].trim();
                   city = line[2].trim();
                   province = line[3].trim();
                   country = line[4].trim();
                   nam = line[5].trim();
                   rms = line[10].trim();
                   rsrms = line[11].trim();
                   rnt = line[12].trim();
                   
                   a = line[6];
                   b = line[7];
                   c = line[8];
                   d = line[9];
            reader = new BufferedReader(new FileReader(fileToBeModified));
             
            //Reading all the lines of input text file into oldContent
             
            String line1 = reader.readLine();
             
            while (line1 != null) 
            {
                oldContent = oldContent + line1 + System.lineSeparator();
                 
                line1 = reader.readLine();
            }
             
            //Replacing oldString with newString in the oldContent
             
            String newContent;
         newContent = oldContent.replaceAll(String.valueOf(nm + "," + addr + "," + city + "," + province + "," + country + "," + nam + "," + a + "," + b + "," + c
                     + "," + d + "," + rms + "," + rsrms + ","+ rnt),String.valueOf(name + "," + address + "," + city + "," + province + "," + country + "," + nam + "," + a1 + "," + b1 + "," + c1 + "," + d1 + "," + rms + "," + rsrms + "," + rent));
             
            //Rewriting the input text file with newContent
             
            writer = new FileWriter(fileToBeModified);
             
            writer.write(newContent);
            oldContent.isEmpty();
        }
               }
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
        finally
        {
            try
            {
                //Closing the resources
                 
                reader.close();
                 
                writer.close();
            } 
            catch (IOException e) 
            {
                e.printStackTrace();
            }
        }
       
        }
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
       String fac1,fac2, fac3, fac4;
       String data = properties.getSelectedItem().toString();
       boolean a = false, b = false, c = false, d= false;
       try {
            Scanner scan = new Scanner(new File("database/Properties.txt")); 
            
                    while(scan.hasNextLine() ) {
                   String[] line = scan.nextLine().split(",");
                   if(line[0].equals(data)){
                 
                    fac1 = line[6].trim();
                    fac2 = line[7].trim();
                    fac3 = line[8].trim();
                    fac4 = line[9].trim();
                    
                    if(fac1 == " ")
                    {
                        a= false;
                    }
                    else{
                        a = true;
                    }
                    if(fac2 == " ")
                    {
                        b = false;
                    }else
                    {
                        b = true;
                    }
                    if(fac3 != " ")
                    {
                       c = false;
                    }else
                    {
                       c = true;
                    }
                    if(fac4 != " ")
                    {
                       d = false;
                    }else
                    {
                       d = true;
                    } 
                   }
            }
            editData(nam.getText().trim(),adddr.getText().trim(),rent.getText().trim(),a,b,c,d);
                    } catch(IOException e) {
           System.out.println("file not opened");
        
                   }
       
    }//GEN-LAST:event_saveActionPerformed
    
    
    private void Show(){
        String data = properties.getSelectedItem().toString();
        String hsName, addr, cty,cntry,provn,ownName,fac1,fac2, fac3, fac4, rms,rsrms, rnt;
        System.out.println(data);
        try {
            Scanner scan = new Scanner(new File("database/Properties.txt")); 
            while(scan.hasNextLine() ) {
                   String[] line = scan.nextLine().split(",");
                   if(line[0].equals(data)){
                    hsName = line[0].trim();
                    addr = line[1].trim();
                    cty = line[2].trim();
                    provn = line[3].trim();
                    cntry = line[4].trim();
                    ownName = line[5].trim();
                    fac1 = line[6].trim();
                    fac2 = line[7].trim();
                    fac3 = line[8].trim();
                    fac4 = line[9].trim();
                    rms = line[10].trim();
                    rsrms = line[11].trim();
                    rnt = line[12].trim();
                    nam.setText(hsName);
                    adddr.setText(addr+" "+cty+" "+provn+" "+cntry);
                    rent.setText(rnt);
                    if(fac1 == " ")
                    {
                        kitchen.setSelected(false);
                    }
                    else{
                        kitchen.setSelected(true);
                    }
                    if(fac2 == " ")
                    {
                        parking.setSelected(false);
                    }else
                    {
                        parking.setSelected(true);
                    }
                    if(fac3 != " ")
                    {
                        internet.setSelected(false);
                    }else
                    {
                        internet.setSelected(true);
                    }
                    if(fac4 != " ")
                    {
                        laundry.setSelected(false);
                    }else
                    {
                        laundry.setSelected(true);
                    }
                   }
                }
            
            } catch(IOException e) {
           System.out.println("file not opened");
        }
        
        
        

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adddr;
    private javax.swing.JButton delete;
    private javax.swing.JCheckBox internet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JCheckBox kitchen;
    private javax.swing.JCheckBox laundry;
    private javax.swing.JButton logout;
    private javax.swing.JTextField nam;
    private javax.swing.JCheckBox parking;
    private javax.swing.JComboBox<String> properties;
    private javax.swing.JTextField rent;
    private javax.swing.JButton save;
    private javax.swing.JButton select;
    // End of variables declaration//GEN-END:variables
}
